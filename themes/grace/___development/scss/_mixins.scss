@mixin test {
  background-color: randomBackgroundColor();
  // border: 1px solid randomBackgroundColor();
  header { background-color: randomBackgroundColor(); }
  section { background-color: randomBackgroundColor(); }
  footer { background-color: randomBackgroundColor(); }
  div { background-color: randomBackgroundColor(); }
  nav { background-color: randomBackgroundColor(); }
  main { background-color: randomBackgroundColor(); }
  article { background-color: randomBackgroundColor(); }
  ul { background-color: randomBackgroundColor(); }
  li { background-color: randomBackgroundColor(); }
  h1 { background-color: randomBackgroundColor(); }
  h2 { background-color: randomBackgroundColor(); }
  h3 { background-color: randomBackgroundColor(); }
  h4 { background-color: randomBackgroundColor(); }
  h5 { background-color: randomBackgroundColor(); }
  h6 { background-color: randomBackgroundColor(); }
  p { background-color: randomBackgroundColor(); }
  a { background-color: randomBackgroundColor(); }
  table { background-color: randomBackgroundColor(); }
  td { background-color: randomBackgroundColor(); }
  th { background-color: randomBackgroundColor(); }
}

@function randomBackgroundColor() {
  $random: scale-saturation(rgb(random(256)-1, random(256)-1, random(256)-1), -30);
  $color: rgba($random, 0.075);
  @return $color;
}

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  } @else {
    -moz-osx-font-smoothing: auto;
    -webkit-font-smoothing: subpixel-antialiased;
  }
}

@mixin full-image ($size: cover) {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: $size;
}

@mixin mobile-trigger ($r: 10px, $t: 10px, $w: 40px, $h: 40px, $opacity: 0.75) {
  $color: rgba (#ccc, $opacity);
  position: absolute;
  z-index: 2000;
  width: $w;
  height: $h;
  right: $r;
  top: $t;
  cursor: pointer;
  background:  linear-gradient(
    to bottom,
    $color, $color 10%,
    transparent 10%, transparent 40%,
    $color 40%, $color 60%,
    transparent 60%, transparent 80%,
    $color 80%, $color 100%
    );
}

@mixin screen-size-marker {
  position: relative;

  &::after {
    @include opacity(0.2);
    @include media-breakpoint-only(xs) {content: 'XS'; background-color: darken(#ff0, 10%); color: #000;}
    @include media-breakpoint-only(sm) {content: 'SM'; background-color: darken(#00f, 10%); color: #fff;}
    @include media-breakpoint-only(md) {content: 'MD'; background-color: darken(#0f0, 10%); color: #fff;}
    @include media-breakpoint-only(lg) {content: 'LG'; background-color: darken(#f90, 10%); color: #fff;}
    @include media-breakpoint-only(xl) {content: 'XL'; background-color: darken(#c00, 10%); color: #fff;}

    $size: 1.5rem;
    position: fixed;
    min-width: $size;
    height: $size;
    font-family: $font-family-monospace;
    font-size: $size * 0.55;
    font-weight: 900;
    line-height: $size;
    text-align: center;
    z-index: 99999;
    right: 0;
    bottom: 0;
    font-weight: normal;
    letter-spacing: 0;
  }
}

@mixin content-paper{
  @include media-breakpoint-only(xs) { padding: $spacer * 0.5  $spacer * 1; }
  @include media-breakpoint-only(sm) { padding: $spacer * 0.75  $spacer * 1.5; }
  @include media-breakpoint-only(md) { padding: $spacer * 1 $spacer * 2; }
  @include media-breakpoint-only(lg) { padding: $spacer * 1.25 $spacer * 2.5; }
  @include media-breakpoint-only(xl) { padding: $spacer * 1.5 $spacer * 3; }
}

@mixin sidebar-paper{
  @include media-breakpoint-only(xs) { padding: $spacer * 0.25; }
  @include media-breakpoint-only(sm) { padding: $spacer * 0.5; }
  @include media-breakpoint-only(md) { padding: $spacer * 0.75; }
  @include media-breakpoint-only(lg) { padding: $spacer; }
  @include media-breakpoint-only(xl) { padding: $spacer; }
}
